{{ define "css_block" }}
<link rel="stylesheet" href="/static/css/home.css">
{{ end }}

{{ define "content" }}
<div class="container">
    <div class="logo-display">
        <img class="logo" alt="Logo">
    </div>
    
    <h1 class="tagline">"I have read and agree to the Terms" is the biggest lie on the web. We aim to fix that.</h1>
    
    <div class="search-container">
        <!--suppress HtmlFormInputWithoutLabel -->
        <input type="text" id="searchInput" placeholder="Search for a service..." class="search-input">
        <button id="searchButton" class="search-button">Search</button>
    </div>
    
    <div class="services-grid">
        {{ range .Featured }}
            <div class="service-card">
                <div class="service-header">
                    <img src="{{.Icon}}" alt="{{.Name}} Service Icon" class="service-icon">
                    <h2 class="service-name"><a href="/service/{{.ID}}">{{.Name}}</a></h2>
                    <span class="service-grade grade-{{.Grade}}">Grade {{.Grade}}</span>
                </div>
                <ul class="service-points">
                    {{ range .Points }}
                        <li class="point-{{ .Case.Classification }}">{{.Title}}</li>
                    {{ end }}
                </ul>
                <div class="service-footer">
                    <a href="/service/{{.ID}}" class="btn btn-primary">View Details</a>
                    <a href="https://edit.tosdr.org/services/{{.ID}}/annotate/" class="btn btn-secondary">View and Help Analyze Documents</a>
                </div>
            </div>
        {{ end }}
    </div>
    
    <div class="last-fetched-info">
        <p>Data last fetched: <span id="lastFetchedTime">{{ .LastFetchedTime }}</span></p>
    </div>

    <div class="classifications-section markdown-content">
        <h1>ToS;DR Classifications</h1>
        <p>ToS;DR aims at creating a transparent and peer-reviewed process to rate and analyse Terms of Service and Privacy Policies in order to create a rating from Grade A to Grade E.</p>
        
        <hr>
        
        <p>Terms of service are reviewed by contributors and divided into small points that we can discuss, compare and ultimately assign a score with a badge:</p>
        <p>(<span class="badge-good">Good</span>), (<span class="badge-bad">Bad</span>), (<span class="badge-blocker">Blocker</span>) or (<span class="badge-neutral">Neutral</span>)</p>
        <p>Once a service has enough badges to assess the fairness of their terms for users, a class is assigned automatically by pondering the average scores.</p>
        
        <ul>
            <li>(<span class="grade-A">Grade A</span>) are the best terms of services: they treat you fairly, respect your rights and will not abuse your data.</li>
            <li>(<span class="grade-B">Grade B</span>) The terms of services are fair towards the user but they could be improved.</li>
            <li>(<span class="grade-C">Grade C</span>) The terms of service are okay but some issues need your consideration.</li>
            <li>(<span class="grade-D">Grade D</span>) The terms of service are very uneven or there are some important issues that need your attention.</li>
            <li>(<span class="grade-E">Grade E</span>) The terms of service raise very serious concerns.</li>
            <li>(<span class="grade-None">No Grade Yet</span>) Not enough information exists to accurately grade this service yet.</li>
        </ul>
        
        <hr>
        
        <p>Right now, you will notice that not many services have a class assigned. That is because we need more data and more reviews before we can start assigning them. Moreover, we are still experimenting with how to apply classes.</p>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const searchButton = document.getElementById('searchButton');

        searchInput.focus();

        function performSearch() {
            const searchTerm = encodeURIComponent(searchInput.value.trim());
            if (searchTerm) {
                window.location.href = `/search/${searchTerm}`;
            }
        }

        searchButton.addEventListener('click', performSearch);

        searchInput.addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                performSearch();
            }
        });
    });
</script>
{{ end }}
